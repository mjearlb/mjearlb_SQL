use DemoDB; 

drop table Dept; 
drop table Employee;
CREATE TABLE `Dept`(
    `DeptID` INT PRIMARY KEY AUTO_INCREMENT,
    `Name` VARCHAR(50) not null,
    `Location` VARCHAR(50) NOT NULL
); 
 
CREATE TABLE `Employee`(
    `EmpID` INT PRIMARY KEY AUTO_INCREMENT,
    `FirstName` VARCHAR(50),
    LastName VARCHAR(50),
    `DeptID` INT REFERENCES Dept, 
    Salary NUMERIC(10,2) NOT NULL CHECK (Salary > 0)
); 
 
-- sample records
-- Here DeptID is autogenerated you can see it is selected
-- for auto_increment.
INSERT INTO `Dept`(`Name`,`Location`)
VALUES('Inventory', 'Boggs Hall');
INSERT INTO `Dept`(`Name`,`Location`)
VALUES('Sales', 'Hill Hall');
INSERT INTO `Dept`(`Name`,`Location`)
VALUES('HR', 'Hill Hall');
 
-- Below insert command is very useful in SQL in Project
-- When you are inserting master data and if you do not know 
-- the generated ID then the query could be used to get the 
-- generated ID and given as input to the insert.
-- Here the output of the select command is given as input for 
-- DeptID column value.
-- NOTE - You need to make sure that it only retrieves one value
-- if it retrieves multiple values then it lead to failure.
INSERT INTO `Employee`(`FirstName`, `LastName`, `DeptID`, `Salary`)
VALUES('Alex','Burns', (SELECT `DeptID` FROM `Dept` WHERE `Name`='Inventory'), 11000);

INSERT INTO `Employee`(`FirstName`, `LastName`, `DeptID`, `Salary`)
VALUES('Barry','Hotdogs', (SELECT `DeptID` FROM `Dept` WHERE `Name`='Sales'), 12000);
 
INSERT INTO `Employee`(`FirstName`, `LastName`, `DeptID`, `Salary`)
VALUES('Cody','Banks', (SELECT `DeptID` FROM `Dept` WHERE `Name`='HR'), 21000);
 
INSERT INTO `Employee`(`FirstName`, `LastName`, `DeptID`, `Salary`)
VALUES('Darren','Duly', 3, 22000);

-- basic queries
SELECT * FROM `Dept`;
SELECT * FROM `Employee`;

-- Let's get a list of all employees in HR
select * from Dept where Name = 'HR'; 
select * from Employee where DeptID = 103; 

-- try subqueries (also shown below, formatted differently)
select * from Employee where DeptID = (select DeptID from Dept where Name = 'HR'); 

-- Display employees who work for HR department
-- Here the sub query returns the department ID for the HR 
-- which is then used as input for retrieving employee
-- records for that department.
SELECT * FROM `Employee`
WHERE `DeptID` = (
	SELECT `DeptID` FROM `Dept`
	WHERE `Name` = 'HR' );
 
-- Display employees whose department location is 'Hill Hall'
SELECT * FROM `Employee`
WHERE `DeptID` IN (
	SELECT `DeptID` FROM `Dept`
	WHERE `Location` = 'Hill Hall' );
    
-- Displays EmpID, Names, and Location of buildings they work in
Select EmpID, FirstName, LastName, Location from Employee as e 
left join Dept as d on (e.DeptID = d.DeptID);